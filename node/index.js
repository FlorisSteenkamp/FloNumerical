"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.orient2d = exports.sqrtWithErr = exports.divWithErr = exports.ddDivDdWithError = exports.significand = exports.exponent = exports.getLowestSetBit = exports.getHighestSetBit = exports.doubleToOctets = exports.doubleToBinaryString = exports.expBitLength = exports.bitLength = exports.lsbExponent = exports.msbExponent = exports.isBitAligned = exports.parseDoubleDetailed = exports.parseDouble = exports.eToDd = exports.eProduct = exports.eSum = exports.eCalculate = exports.eIntPow = exports.eToBitlength = exports.eAbs = exports.eCompare = exports.eSign = exports.eDivBy2 = exports.eMultByNeg2 = exports.eMultBy2 = exports.eNegativeOf = exports.eDiff = exports.eEstimate = exports.eCompress = exports.eDiv = exports.eMultDouble2 = exports.scaleExpansion2 = exports.eMultDouble1 = exports.scaleExpansion = exports.eMult = exports.expansionProduct = exports.eAddDouble = exports.growExpansion = exports.eAdd = exports.fastExpansionSum = exports.ddMax = exports.ddMin = exports.ddMultByNeg4 = exports.ddMultByNeg2 = exports.ddDivBy2 = exports.ddMultBy4 = exports.ddMultBy2 = exports.ddSign = exports.ddNegativeOf = exports.ddDivDd = exports.ddDivDouble = exports.ddMultDd = exports.ddMultDouble2 = exports.ddMultDouble1 = exports.ddDiffDd = exports.ddCompare = exports.ddSum = exports.ddProduct = exports.ddAddDd = exports.ddAddDouble = exports.ddAbs = exports.ddSqrt = exports.reduceSignificand = exports.twoSum = exports.twoProduct = exports.twoDiff = exports.split = exports.fastTwoSum = exports.fastTwoDiff = void 0;
const dd_min_1 = require("./double-double/dd-min");
Object.defineProperty(exports, "ddMin", { enumerable: true, get: function () { return dd_min_1.ddMin; } });
const dd_max_1 = require("./double-double/dd-max");
Object.defineProperty(exports, "ddMax", { enumerable: true, get: function () { return dd_max_1.ddMax; } });
const dd_sqrt_1 = require("./double-double/dd-sqrt");
Object.defineProperty(exports, "ddSqrt", { enumerable: true, get: function () { return dd_sqrt_1.ddSqrt; } });
const sqrt_with_err_1 = require("./double-with-err/sqrt-with-err");
Object.defineProperty(exports, "sqrtWithErr", { enumerable: true, get: function () { return sqrt_with_err_1.sqrtWithErr; } });
const dd_abs_1 = require("./double-double/dd-abs");
Object.defineProperty(exports, "ddAbs", { enumerable: true, get: function () { return dd_abs_1.ddAbs; } });
const dd_add_double_1 = require("./double-double/dd-add-double");
Object.defineProperty(exports, "ddAddDouble", { enumerable: true, get: function () { return dd_add_double_1.ddAddDouble; } });
const dd_add_dd_1 = require("./double-double/dd-add-dd");
Object.defineProperty(exports, "ddAddDd", { enumerable: true, get: function () { return dd_add_dd_1.ddAddDd; } });
const dd_product_1 = require("./double-double/dd-product");
Object.defineProperty(exports, "ddProduct", { enumerable: true, get: function () { return dd_product_1.ddProduct; } });
const dd_sum_1 = require("./double-double/dd-sum");
Object.defineProperty(exports, "ddSum", { enumerable: true, get: function () { return dd_sum_1.ddSum; } });
const dd_compare_1 = require("./double-double/dd-compare");
Object.defineProperty(exports, "ddCompare", { enumerable: true, get: function () { return dd_compare_1.ddCompare; } });
const dd_diff_dd_1 = require("./double-double/dd-diff-dd");
Object.defineProperty(exports, "ddDiffDd", { enumerable: true, get: function () { return dd_diff_dd_1.ddDiffDd; } });
const dd_mult_double_1 = require("./double-double/dd-mult-double");
Object.defineProperty(exports, "ddMultDouble1", { enumerable: true, get: function () { return dd_mult_double_1.ddMultDouble1; } });
Object.defineProperty(exports, "ddMultDouble2", { enumerable: true, get: function () { return dd_mult_double_1.ddMultDouble2; } });
const dd_mult_by_2_1 = require("./double-double/dd-mult-by-2");
Object.defineProperty(exports, "ddMultBy2", { enumerable: true, get: function () { return dd_mult_by_2_1.ddMultBy2; } });
const dd_mult_by_4_1 = require("./double-double/dd-mult-by-4");
Object.defineProperty(exports, "ddMultBy4", { enumerable: true, get: function () { return dd_mult_by_4_1.ddMultBy4; } });
const dd_div_by_2_1 = require("./double-double/dd-div-by-2");
Object.defineProperty(exports, "ddDivBy2", { enumerable: true, get: function () { return dd_div_by_2_1.ddDivBy2; } });
const dd_mult_by_neg_2_1 = require("./double-double/dd-mult-by-neg-2");
Object.defineProperty(exports, "ddMultByNeg2", { enumerable: true, get: function () { return dd_mult_by_neg_2_1.ddMultByNeg2; } });
const dd_mult_by_neg_4_1 = require("./double-double/dd-mult-by-neg-4");
Object.defineProperty(exports, "ddMultByNeg4", { enumerable: true, get: function () { return dd_mult_by_neg_4_1.ddMultByNeg4; } });
const dd_mult_dd_1 = require("./double-double/dd-mult-dd");
Object.defineProperty(exports, "ddMultDd", { enumerable: true, get: function () { return dd_mult_dd_1.ddMultDd; } });
const dd_div_double_1 = require("./double-double/dd-div-double");
Object.defineProperty(exports, "ddDivDouble", { enumerable: true, get: function () { return dd_div_double_1.ddDivDouble; } });
const dd_div_dd_1 = require("./double-double/dd-div-dd");
Object.defineProperty(exports, "ddDivDd", { enumerable: true, get: function () { return dd_div_dd_1.ddDivDd; } });
const dd_negative_of_1 = require("./double-double/dd-negative-of");
Object.defineProperty(exports, "ddNegativeOf", { enumerable: true, get: function () { return dd_negative_of_1.ddNegativeOf; } });
const dd_sign_1 = require("./double-double/dd-sign");
Object.defineProperty(exports, "ddSign", { enumerable: true, get: function () { return dd_sign_1.ddSign; } });
const e_to_bitlength_1 = require("./double-expansion/e-to-bitlength");
Object.defineProperty(exports, "eToBitlength", { enumerable: true, get: function () { return e_to_bitlength_1.eToBitlength; } });
const e_div_1 = require("./double-expansion/e-div");
Object.defineProperty(exports, "eDiv", { enumerable: true, get: function () { return e_div_1.eDiv; } });
const e_compress_1 = require("./double-expansion/e-compress");
Object.defineProperty(exports, "eCompress", { enumerable: true, get: function () { return e_compress_1.eCompress; } });
const e_compare_1 = require("./double-expansion/e-compare");
Object.defineProperty(exports, "eCompare", { enumerable: true, get: function () { return e_compare_1.eCompare; } });
const e_abs_1 = require("./double-expansion/e-abs");
Object.defineProperty(exports, "eAbs", { enumerable: true, get: function () { return e_abs_1.eAbs; } });
const e_estimate_1 = require("./double-expansion/e-estimate");
Object.defineProperty(exports, "eEstimate", { enumerable: true, get: function () { return e_estimate_1.eEstimate; } });
const e_diff_1 = require("./double-expansion/e-diff");
Object.defineProperty(exports, "eDiff", { enumerable: true, get: function () { return e_diff_1.eDiff; } });
const fast_expansion_sum_1 = require("./double-expansion/fast-expansion-sum");
Object.defineProperty(exports, "fastExpansionSum", { enumerable: true, get: function () { return fast_expansion_sum_1.fastExpansionSum; } });
const fast_two_diff_1 = require("./basic/fast-two-diff");
Object.defineProperty(exports, "fastTwoDiff", { enumerable: true, get: function () { return fast_two_diff_1.fastTwoDiff; } });
const fast_two_sum_1 = require("./basic/fast-two-sum");
Object.defineProperty(exports, "fastTwoSum", { enumerable: true, get: function () { return fast_two_sum_1.fastTwoSum; } });
const grow_expansion_1 = require("./double-expansion/grow-expansion");
Object.defineProperty(exports, "growExpansion", { enumerable: true, get: function () { return grow_expansion_1.growExpansion; } });
const e_negative_of_1 = require("./double-expansion/e-negative-of");
Object.defineProperty(exports, "eNegativeOf", { enumerable: true, get: function () { return e_negative_of_1.eNegativeOf; } });
const orient2d_1 = require("./geometric-primitives/orient2d");
Object.defineProperty(exports, "orient2d", { enumerable: true, get: function () { return orient2d_1.orient2d; } });
const scale_expansion_1 = require("./double-expansion/scale-expansion");
Object.defineProperty(exports, "scaleExpansion", { enumerable: true, get: function () { return scale_expansion_1.scaleExpansion; } });
Object.defineProperty(exports, "scaleExpansion2", { enumerable: true, get: function () { return scale_expansion_1.scaleExpansion2; } });
const e_mult_by_2_1 = require("./double-expansion/e-mult-by-2");
Object.defineProperty(exports, "eMultBy2", { enumerable: true, get: function () { return e_mult_by_2_1.eMultBy2; } });
const e_mult_by_neg_2_1 = require("./double-expansion/e-mult-by-neg-2");
Object.defineProperty(exports, "eMultByNeg2", { enumerable: true, get: function () { return e_mult_by_neg_2_1.eMultByNeg2; } });
const e_div_by_2_1 = require("./double-expansion/e-div-by-2");
Object.defineProperty(exports, "eDivBy2", { enumerable: true, get: function () { return e_div_by_2_1.eDivBy2; } });
const split_1 = require("./basic/split");
Object.defineProperty(exports, "split", { enumerable: true, get: function () { return split_1.split; } });
const two_diff_1 = require("./basic/two-diff");
Object.defineProperty(exports, "twoDiff", { enumerable: true, get: function () { return two_diff_1.twoDiff; } });
const two_product_1 = require("./basic/two-product");
Object.defineProperty(exports, "twoProduct", { enumerable: true, get: function () { return two_product_1.twoProduct; } });
const two_sum_1 = require("./basic/two-sum");
Object.defineProperty(exports, "twoSum", { enumerable: true, get: function () { return two_sum_1.twoSum; } });
const reduce_significand_1 = require("./basic/reduce-significand");
Object.defineProperty(exports, "reduceSignificand", { enumerable: true, get: function () { return reduce_significand_1.reduceSignificand; } });
const expansion_product_1 = require("./double-expansion/expansion-product");
Object.defineProperty(exports, "expansionProduct", { enumerable: true, get: function () { return expansion_product_1.expansionProduct; } });
const parse_double_1 = require("./double-representation/parse-double");
Object.defineProperty(exports, "parseDouble", { enumerable: true, get: function () { return parse_double_1.parseDouble; } });
Object.defineProperty(exports, "parseDoubleDetailed", { enumerable: true, get: function () { return parse_double_1.parseDoubleDetailed; } });
const is_bit_aligned_1 = require("./double-representation/is-bit-aligned");
Object.defineProperty(exports, "isBitAligned", { enumerable: true, get: function () { return is_bit_aligned_1.isBitAligned; } });
const msb_exponent_1 = require("./double-representation/msb-exponent");
Object.defineProperty(exports, "msbExponent", { enumerable: true, get: function () { return msb_exponent_1.msbExponent; } });
const lsb_exponent_1 = require("./double-representation/lsb-exponent");
Object.defineProperty(exports, "lsbExponent", { enumerable: true, get: function () { return lsb_exponent_1.lsbExponent; } });
const e_sign_1 = require("./double-expansion/e-sign");
Object.defineProperty(exports, "eSign", { enumerable: true, get: function () { return e_sign_1.eSign; } });
const bit_length_1 = require("./double-representation/bit-length");
Object.defineProperty(exports, "bitLength", { enumerable: true, get: function () { return bit_length_1.bitLength; } });
const bit_length_2 = require("./double-representation/bit-length");
Object.defineProperty(exports, "expBitLength", { enumerable: true, get: function () { return bit_length_2.expBitLength; } });
const e_calculate_1 = require("./double-expansion/e-calculate");
Object.defineProperty(exports, "eCalculate", { enumerable: true, get: function () { return e_calculate_1.eCalculate; } });
const e_sum_1 = require("./double-expansion/e-sum");
Object.defineProperty(exports, "eSum", { enumerable: true, get: function () { return e_sum_1.eSum; } });
const e_product_1 = require("./double-expansion/e-product");
Object.defineProperty(exports, "eProduct", { enumerable: true, get: function () { return e_product_1.eProduct; } });
const exponent_1 = require("./double-representation/exponent");
Object.defineProperty(exports, "exponent", { enumerable: true, get: function () { return exponent_1.exponent; } });
const significand_1 = require("./double-representation/significand");
Object.defineProperty(exports, "significand", { enumerable: true, get: function () { return significand_1.significand; } });
const double_to_binary_string_1 = require("./double-representation/double-to-binary-string");
Object.defineProperty(exports, "doubleToBinaryString", { enumerable: true, get: function () { return double_to_binary_string_1.doubleToBinaryString; } });
const double_to_octets_1 = require("./double-representation/double-to-octets");
Object.defineProperty(exports, "doubleToOctets", { enumerable: true, get: function () { return double_to_octets_1.doubleToOctets; } });
const get_max_set_bit_1 = require("./double-representation/get-max-set-bit");
Object.defineProperty(exports, "getHighestSetBit", { enumerable: true, get: function () { return get_max_set_bit_1.getHighestSetBit; } });
Object.defineProperty(exports, "getLowestSetBit", { enumerable: true, get: function () { return get_max_set_bit_1.getLowestSetBit; } });
const e_int_pow_1 = require("./double-expansion/e-int-pow");
Object.defineProperty(exports, "eIntPow", { enumerable: true, get: function () { return e_int_pow_1.eIntPow; } });
const dd_div_dd_with_error_1 = require("./double-double-with-error/dd-div-dd-with-error");
Object.defineProperty(exports, "ddDivDdWithError", { enumerable: true, get: function () { return dd_div_dd_with_error_1.ddDivDdWithError; } });
const div_with_err_1 = require("./double-with-err/div-with-err");
Object.defineProperty(exports, "divWithErr", { enumerable: true, get: function () { return div_with_err_1.divWithErr; } });
const e_to_double_double_1 = require("./double-expansion/e-to-double-double");
Object.defineProperty(exports, "eToDd", { enumerable: true, get: function () { return e_to_double_double_1.eToDd; } });
// Aliases for some functions which names were not changed due to them being
// used extensively in the literature with a particular recognizable name
const eAdd = fast_expansion_sum_1.fastExpansionSum;
exports.eAdd = eAdd;
const eAddDouble = grow_expansion_1.growExpansion;
exports.eAddDouble = eAddDouble;
const eMult = expansion_product_1.expansionProduct;
exports.eMult = eMult;
const eMultDouble1 = scale_expansion_1.scaleExpansion;
exports.eMultDouble1 = eMultDouble1;
const eMultDouble2 = scale_expansion_1.scaleExpansion2;
exports.eMultDouble2 = eMultDouble2;
//# sourceMappingURL=index.js.map